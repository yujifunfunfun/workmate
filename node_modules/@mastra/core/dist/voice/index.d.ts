import { b as MastraVoice } from '../base-Bk5V1doj.js';
export { C as CompositeVoice, d as VoiceConfig, c as VoiceEventMap, V as VoiceEventType } from '../base-Bk5V1doj.js';
import '../base-DT2poiVK.js';
import 'ai';
import '../types-BtMyV38I.js';
import 'sift';
import 'zod';
import 'json-schema';
import '../di/index.js';
import '../index-CquI0inB.js';
import 'stream';
import 'pino';
import '@opentelemetry/api';
import 'xstate';
import 'node:events';
import '../vector/index.js';
import '../vector/filter/index.js';
import '../tts/index.js';
import '../deployer/index.js';
import '../bundler/index.js';
import 'hono';
import 'hono/cors';
import 'hono-openapi';
import '@opentelemetry/sdk-trace-base';

declare class DefaultVoice extends MastraVoice {
    constructor();
    speak(_input: string | NodeJS.ReadableStream): Promise<NodeJS.ReadableStream>;
    listen(_input: string | NodeJS.ReadableStream): Promise<string>;
    getSpeakers(): Promise<{
        voiceId: string;
    }[]>;
}

export { DefaultVoice, MastraVoice };
